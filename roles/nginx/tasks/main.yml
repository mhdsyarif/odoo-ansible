- name: Ensure nginx docker directory exists
  ansible.builtin.file:
    path: "{{ docker_nginx_dir }}"
    state: directory

- name: Create necessary folders
  ansible.builtin.file:
    path: "{{ docker_nginx_dir }}/{{ item }}"
    state: directory
  loop:
    - certbot/conf
    - certbot/www

- name: Ensure docker-compose.yml is deployed
  ansible.builtin.template:
    src: docker-compose.yml.j2
    dest: "{{ docker_nginx_dir }}/docker-compose.yml"

- name: Deploy temporary HTTP nginx config (no SSL)
  ansible.builtin.template:
    src: nginx-http.conf.j2
    dest: "{{ docker_nginx_dir }}/nginx.conf"

- name: Run nginx (HTTP only)
  ansible.builtin.shell: docker compose up -d nginx
  args:
    chdir: "{{ docker_nginx_dir }}"
  register: nginx_run
  changed_when: "'Started' in nginx_run.stdout or 'Recreated' in nginx_run.stdout"

- name: Wait for nginx to be ready (port 80)
  ansible.builtin.wait_for:
    host: 127.0.0.1
    port: 80
    timeout: 30

- name: Run certbot to generate certificate
  ansible.builtin.shell: >
    docker compose run --rm certbot certonly
    --webroot -w /var/www/html
    -d {{ domain_name }}
    --email {{ email }}
    --agree-tos --no-eff-email --non-interactive
  args:
    chdir: "{{ docker_nginx_dir }}"
  register: certbot_result
  failed_when: >
    certbot_result.rc != 0 and
    'Certificate not yet due for renewal' not in certbot_result.stderr
  changed_when: "'Congratulations' in certbot_result.stdout"

- name: Deploy HTTPS nginx config (with SSL)
  ansible.builtin.template:
    src: nginx-ssl.conf.j2
    dest: "{{ docker_nginx_dir }}/nginx.conf"

- name: Reload nginx to apply SSL
  ansible.builtin.shell: docker compose restart nginx
  args:
    chdir: "{{ docker_nginx_dir }}"

- name: Add cron job to renew certbot and restart nginx
  ansible.builtin.cron:
    name: "Renew SSL with Certbot and restart Nginx"
    minute: "0"
    hour: "0"
    user: root
    job: >
      cd {{ docker_nginx_dir }} &&
      docker compose run --rm certbot renew --webroot -w /var/www/html &&
      docker compose exec nginx nginx -s reload
    cron_file: certbot_renew